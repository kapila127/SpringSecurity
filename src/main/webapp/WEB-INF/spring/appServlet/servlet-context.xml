<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<annotation-driven />
	<!-- <jpa:repositories base-package="java.service.*"></jpa:repositories>
 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
       <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
   	      <beans:property name="location">
             <beans:value>/WEB-INF/spring/spring-excel-view.xml</beans:value>
          </beans:property>
	      <beans:property name="order" value="0" />
       </beans:bean>
       
       <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
	    <beans:property name="location">	       
                <beans:value>/WEB-INF/spring/spring-pdf-views.xml</beans:value>
	    </beans:property>
	   <beans:property name="order" value="0" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
        <beans:property name="order" value="1" />
	</beans:bean>

	
	 <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        <beans:property name="viewClass">  
            <beans:value>  org.springframework.web.servlet.view.tiles3.TilesView </beans:value>  
        </beans:property>  
        <beans:property name="order" value="0" />
    </beans:bean>  
    <beans:bean id="tilesConfigurer"  class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <beans:property name="definitions">  
            <beans:list>  
                <beans:value>/WEB-INF/spring/tiles.xml</beans:value>  
            </beans:list>  
        </beans:property>  
    </beans:bean>   
   
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
        <!-- max size of file in memory (in bytes) -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </beans:bean>
	
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/erp" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>model.Person</beans:value>
				<beans:value>model.Employee</beans:value>
				<beans:value>model.Contact</beans:value>
				<beans:value>model.Address</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">validate</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
     
	<context:component-scan base-package="controller" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="model" />
	<context:component-scan base-package="service" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
       <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
 
 <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">	</beans:bean>	
    
    <!-- Loads DWR-related configuration -->
 <!--
 <beans:import resource="dwr-context.xml" />
 <beans:import resource="root-context.xml" />
 
 
 
  -->
    
  </beans:beans>
